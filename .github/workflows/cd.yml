name: Deploy to Server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build and push Docker image
        run: |
          sudo docker build -t buddyspace/buddyspace-backend:latest ./
          docker push buddyspace/buddyspace-backend:latest

      - name: SSH and deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            DEPLOY_DIR="/home/${{ secrets.AWS_EC2_USER }}/buddyspace_backend"
            
            if [ ! -d "$DEPLOY_DIR" ]; then
              sudo git clone https://github.com/team-budderz/buddy-space.git "$DEPLOY_DIR"
            fi
            
            cd "$DEPLOY_DIR" || { echo "Failed to change directory to $DEPLOY_DIR"; exit 1; }
            sudo git pull origin dev || { echo "Failed to git pull"; exit 1; }
            
            sudo echo "${{ secrets.ENV }}" > .env
            sudo export $(cat "$DEPLOY_DIR"/.env | xargs)
            
            sudo docker-compose -f docker-compose.yml pull || { echo "Failed to pull Docker images"; exit 1; }
            sudo docker-compose -f docker-compose.yml down || { echo "Failed to stop Docker containers"; exit 1; }
            sudo docker-compose -f docker-compose.yml up -d || { echo "Failed to start Docker containers"; exit 1; }
